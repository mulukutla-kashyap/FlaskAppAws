version: 0.1

env:
  variables:
    GIT_TAG: 0.0.1 # will use it to tag the docker image
    GIT_URL: mulukutla-kashyap/FlaskAppAws
  parameter-store:
    REPOSITORY_URI: https://github.com/mulukutla-kashyap/FlaskAppAws.git#main # ECR URI
    POST_REQUEST_URL: /deployment/test_url
phases:
  install:
    commands:
      - wget https://releases.hashicorp.com/terraform/0.12.24/terraform_0.12.24_linux_amd64.zip
      - unzip terraform_0.12.24_linux_amd64.zip
      - ls
      - mv terraform /usr/bin
      - rm terraform_0.12.24_linux_amd64.zip
      - apt-get update
      - terraform version
      - export python=python3.6
      - wget https://bootstrap.pypa.io/pip/3.5/get-pip.py
      - python3.6 get-pip.py
      - python3.6 -m pip install -r requirements.txt --default-timeout=2000
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - echo $REPOSITORY_URI
      - echo $GIT_TAG
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image....
      - docker build -t $REPOSITORY_URI:latest -f FlaskAppAws/build/Dockerfile . #added file path in docker run
      - echo docker tag $REPOSITORY_URI:$GIT_TAG
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$GIT_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$GIT_TAG
      - echo Running Terraform...
      - cd MetaEndpoint/dev/terraform
      - terraform init
      - terraform plan
      - terraform apply -auto-approve
      - echo "deployment notification"
      - curl -X POST $POST_REQUEST_URL -H 'Content-Type:application/json' -d '{"commit_id":$CODEBUILD_RESOLVED_SOURCE_VERSION, "deployment_url":$CODEBUILD_SOURCE_REPO_URL, "relative_buildspec_path":"FlaskAppAws/build/buildspec.yml", "product_url":$GIT_URL}'
      - cd ../
      - python3.6 app.py
